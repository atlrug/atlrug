= atlrug Web Site (atlrug4)

This is a Ruby-on-Rails web application for the ATLRUG (Atlanta Ruby User Group).


== Setup

On 4/26/2013, the requirements were: Ruby 2.0.0-p0; Rails 4.0.0.rc1

Note: Install Ruby 2.0.0-p0 via RVM checkout https://coderwall.com/p/tptocq.

1. To install gems, run:
    bundle install

2. Create databases and tables:

    rake db:create
    rake db:migrate

3. Run the tests by typing <b>rake</b> (when we write them -- smile)

4. Project is on Github at https://github.com/atlrug/atlrug4.

5. Follow these instructions regarding Heroku and Rails 4 (avoid "bundle --binstubs"): https://gist.github.com/peter/3025502

6. There are two variables to set AR4_S_K_B (secret key base) and MEETUP_KEY (ENV var for meetup.com API key). You can get an meetup.com API key at: http://www.meetup.com/meetup_api/key

7. The following command will encrypt and add it to atlrug/.travis.yml file. Note, you may have to do this twice. The first time may create $HOME/.travis/config.yml and if that has your repos in it, it will lock down your key to only your repos. So delete or edit that config.yml in your home directory and rerun this command:

    travis encrypt MEETUP_KEY=your_meetup_key_here --add

8. To set AR4_S_K_B, run the following command and add <b>export AR4_S_K_B=<secret></b> to your .bashrc file.

    rake secret

9. For more detail about <b>Guard LiveReload</b>, go to: https://github.com/guard/guard-livereload


== To Contribute

1. Sign in at http://contribhub.co and click "I Wanna Help!" button at top.

2. Find a project you like.

3. Fork project on Github.

4. Clone it locally.

5. Make change.

6. Push it back to Github.

7. Create a Pull Request to original repo.

== DISCUSSION

If you have questions, please use this Google group: atlrug-website[https://groups.google.com/forum/?fromgroups#!forum/atlrug-website]


== License

atlrug4 is released under the MIT License. http://www.opensource.org/licenses/mit-license
